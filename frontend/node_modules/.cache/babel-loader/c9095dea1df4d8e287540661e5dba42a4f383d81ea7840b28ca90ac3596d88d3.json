{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n  }\n  _getJson(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n  _setHeaders() {\n    const token = localStorage.getItem(\"token\");\n    return {\n      Authorization: `Bearer ${token}`,\n      ...this._headers\n    };\n  }\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      // method: \"GET\",\n      headers: this._setHeaders()\n    }).then(this._getJson);\n  }\n  getUserData() {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._getJson);\n  }\n  editUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._getJson);\n  }\n  editProfileAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._getJson);\n  }\n  editUserAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._getJson);\n  }\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._setHeaders(),\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._getJson);\n  }\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._setHeaders()\n    }).then(this._getJson);\n  }\n  addLike(id) {\n    return fetch(`${this._url}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._setHeaders()\n    }).then(this._getJson);\n  }\n  deleteLike(id, token) {\n    return fetch(`${this._url}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._setHeaders()\n    }).then(this._getJson);\n  }\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this.addLike(cardId);\n    } else {\n      return this.deleteLike(cardId);\n    }\n  }\n}\nexport const api = new Api({\n  url: \"\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-type\": \"application/json\"\n  }\n});","map":{"version":3,"names":["Api","constructor","options","_url","url","_headers","headers","_getJson","res","ok","json","Promise","reject","status","_setHeaders","token","localStorage","getItem","Authorization","getInitialCards","fetch","then","getUserData","method","editUserInfo","data","body","JSON","stringify","name","about","editProfileAvatar","avatar","editUserAvatar","addCard","link","deleteCard","id","addLike","deleteLike","changeLikeCardStatus","cardId","isLiked","api","Accept"],"sources":["C:/Users/Evgeny/dev/react-mesto-api-full-gha/frontend/src/utils/Api.js"],"sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this._url = options.url;\r\n    this._headers = options.headers;\r\n  }\r\n\r\n _getJson(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    } else {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n  }\r\n\r\n  _setHeaders() { \r\n    const token = localStorage.getItem(\"token\"); \r\n    return { \r\n      Authorization: `Bearer ${token}`, \r\n      ...this._headers, \r\n    }; \r\n  } \r\n\r\n\r\n \r\n  getInitialCards() {\r\n    return fetch(`${this._url}/cards`, {\r\n      // method: \"GET\",\r\n      headers: this._setHeaders(),\r\n    }).then(this._getJson);\r\n  }\r\n  getUserData() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    }).then(this._getJson);\r\n  }\r\n  editUserInfo(data) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about,\r\n      }),\r\n    }).then(this._getJson);\r\n\r\n  }\r\n  editProfileAvatar(data) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.avatar,\r\n      }),\r\n    }).then(this._getJson);\r\n  }\r\n\r\n  editUserAvatar(data) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.avatar,\r\n      }),\r\n    }).then(this._getJson);\r\n  }\r\n\r\n\r\n  addCard(data) {\r\n    return fetch(`${this._url}/cards`, { \r\n      method: \"POST\", \r\n      headers: this._setHeaders(), \r\n      body: JSON.stringify({ \r\n        name: data.name, \r\n        link: data.link, \r\n      }), \r\n    }).then(this._getJson); \r\n  }\r\n\r\n  deleteCard(id) {\r\n    return fetch(`${this._url}/cards/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: this._setHeaders(),\r\n    }).then(this._getJson);\r\n  }\r\n\r\n  addLike(id) {\r\n    return fetch(`${this._url}/cards/${id}/likes`, {\r\n      method: \"PUT\",\r\n      headers: this._setHeaders(),\r\n    }).then(this._getJson);\r\n  }\r\n  \r\n  deleteLike(id, token) {\r\n    return fetch(`${this._url}/cards/${id}/likes`, {\r\n      method: \"DELETE\",\r\n      headers: this._setHeaders(),\r\n    }).then(this._getJson);\r\n  }\r\n\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n    if (isLiked) {\r\n      return this.addLike(cardId);\r\n    } else {\r\n      return this.deleteLike(cardId);\r\n    }\r\n  }\r\n}\r\n\r\nexport const api = new Api({\r\n  url: \"\",\r\n  headers: {\r\n    Accept: \"application/json\", \r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});"],"mappings":"AAAA,MAAMA,GAAG,CAAC;EACRC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,IAAI,GAAGD,OAAO,CAACE,GAAG;IACvB,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACI,OAAO;EACjC;EAEDC,QAAQA,CAACC,GAAG,EAAE;IACX,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACnB,CAAC,MAAM;MACL,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;IAChD;EACF;EAEAC,WAAWA,CAAA,EAAG;IACZ,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAO;MACLC,aAAa,EAAG,UAASH,KAAM,EAAC;MAChC,GAAG,IAAI,CAACV;IACV,CAAC;EACH;EAIAc,eAAeA,CAAA,EAAG;IAChB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACjB,IAAK,QAAO,EAAE;MACjC;MACAG,OAAO,EAAE,IAAI,CAACQ,WAAW,CAAC;IAC5B,CAAC,CAAC,CAACO,IAAI,CAAC,IAAI,CAACd,QAAQ,CAAC;EACxB;EACAe,WAAWA,CAAA,EAAG;IACZ,OAAOF,KAAK,CAAE,GAAE,IAAI,CAACjB,IAAK,WAAU,EAAE;MACpCoB,MAAM,EAAE,KAAK;MACbjB,OAAO,EAAE,IAAI,CAACD;IAChB,CAAC,CAAC,CAACgB,IAAI,CAAC,IAAI,CAACd,QAAQ,CAAC;EACxB;EACAiB,YAAYA,CAACC,IAAI,EAAE;IACjB,OAAOL,KAAK,CAAE,GAAE,IAAI,CAACjB,IAAK,WAAU,EAAE;MACpCoB,MAAM,EAAE,OAAO;MACfjB,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBqB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAEJ,IAAI,CAACI,IAAI;QACfC,KAAK,EAAEL,IAAI,CAACK;MACd,CAAC;IACH,CAAC,CAAC,CAACT,IAAI,CAAC,IAAI,CAACd,QAAQ,CAAC;EAExB;EACAwB,iBAAiBA,CAACN,IAAI,EAAE;IACtB,OAAOL,KAAK,CAAE,GAAE,IAAI,CAACjB,IAAK,kBAAiB,EAAE;MAC3CoB,MAAM,EAAE,OAAO;MACfjB,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBqB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBI,MAAM,EAAEP,IAAI,CAACO;MACf,CAAC;IACH,CAAC,CAAC,CAACX,IAAI,CAAC,IAAI,CAACd,QAAQ,CAAC;EACxB;EAEA0B,cAAcA,CAACR,IAAI,EAAE;IACnB,OAAOL,KAAK,CAAE,GAAE,IAAI,CAACjB,IAAK,kBAAiB,EAAE;MAC3CoB,MAAM,EAAE,OAAO;MACfjB,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBqB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBI,MAAM,EAAEP,IAAI,CAACO;MACf,CAAC;IACH,CAAC,CAAC,CAACX,IAAI,CAAC,IAAI,CAACd,QAAQ,CAAC;EACxB;EAGA2B,OAAOA,CAACT,IAAI,EAAE;IACZ,OAAOL,KAAK,CAAE,GAAE,IAAI,CAACjB,IAAK,QAAO,EAAE;MACjCoB,MAAM,EAAE,MAAM;MACdjB,OAAO,EAAE,IAAI,CAACQ,WAAW,CAAC,CAAC;MAC3BY,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAEJ,IAAI,CAACI,IAAI;QACfM,IAAI,EAAEV,IAAI,CAACU;MACb,CAAC;IACH,CAAC,CAAC,CAACd,IAAI,CAAC,IAAI,CAACd,QAAQ,CAAC;EACxB;EAEA6B,UAAUA,CAACC,EAAE,EAAE;IACb,OAAOjB,KAAK,CAAE,GAAE,IAAI,CAACjB,IAAK,UAASkC,EAAG,EAAC,EAAE;MACvCd,MAAM,EAAE,QAAQ;MAChBjB,OAAO,EAAE,IAAI,CAACQ,WAAW,CAAC;IAC5B,CAAC,CAAC,CAACO,IAAI,CAAC,IAAI,CAACd,QAAQ,CAAC;EACxB;EAEA+B,OAAOA,CAACD,EAAE,EAAE;IACV,OAAOjB,KAAK,CAAE,GAAE,IAAI,CAACjB,IAAK,UAASkC,EAAG,QAAO,EAAE;MAC7Cd,MAAM,EAAE,KAAK;MACbjB,OAAO,EAAE,IAAI,CAACQ,WAAW,CAAC;IAC5B,CAAC,CAAC,CAACO,IAAI,CAAC,IAAI,CAACd,QAAQ,CAAC;EACxB;EAEAgC,UAAUA,CAACF,EAAE,EAAEtB,KAAK,EAAE;IACpB,OAAOK,KAAK,CAAE,GAAE,IAAI,CAACjB,IAAK,UAASkC,EAAG,QAAO,EAAE;MAC7Cd,MAAM,EAAE,QAAQ;MAChBjB,OAAO,EAAE,IAAI,CAACQ,WAAW,CAAC;IAC5B,CAAC,CAAC,CAACO,IAAI,CAAC,IAAI,CAACd,QAAQ,CAAC;EACxB;EAEAiC,oBAAoBA,CAACC,MAAM,EAAEC,OAAO,EAAE;IACpC,IAAIA,OAAO,EAAE;MACX,OAAO,IAAI,CAACJ,OAAO,CAACG,MAAM,CAAC;IAC7B,CAAC,MAAM;MACL,OAAO,IAAI,CAACF,UAAU,CAACE,MAAM,CAAC;IAChC;EACF;AACF;AAEA,OAAO,MAAME,GAAG,GAAG,IAAI3C,GAAG,CAAC;EACzBI,GAAG,EAAE,EAAE;EACPE,OAAO,EAAE;IACPsC,MAAM,EAAE,kBAAkB;IAC1B,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}