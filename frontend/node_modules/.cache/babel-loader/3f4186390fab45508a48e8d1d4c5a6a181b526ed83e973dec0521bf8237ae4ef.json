{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n  }\n  _getJson(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._getJson);\n  }\n  getDataUser() {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._getJson);\n  }\n  editUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.job\n      })\n    }).then(this._getJson);\n  }\n  editProfileAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._getJson);\n  }\n  editUserAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._getJson);\n  }\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.place,\n        link: data.link\n      })\n    }).then(this._getJson);\n  }\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getJson);\n  }\n  addLike(id) {\n    return fetch(`${this._url}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._getJson);\n  }\n  deleteLike(id) {\n    return fetch(`${this._url}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getJson);\n  }\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this.addLike(cardId);\n    } else {\n      return this.deleteLike(cardId);\n    }\n  }\n}\nexport const api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-65\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    authorization: \"561c351e-1fa6-44a4-8675-268f6f753b23\"\n  }\n});","map":{"version":3,"names":["Api","constructor","options","_url","url","_headers","headers","_getJson","res","ok","json","Promise","reject","status","getInitialCards","fetch","method","then","getDataUser","editUserInfo","data","body","JSON","stringify","name","about","job","editProfileAvatar","avatar","editUserAvatar","addCard","place","link","deleteCard","id","addLike","deleteLike","changeLikeCardStatus","cardId","isLiked","api","authorization"],"sources":["C:/Users/Evgeny/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this._url = options.url;\r\n    this._headers = options.headers;\r\n  }\r\n  _getJson(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    } else {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n  }\r\n  getInitialCards() {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    }).then(this._getJson);\r\n  }\r\n  getDataUser() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    }).then(this._getJson);\r\n  }\r\n  editUserInfo(data) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.job,\r\n      }),\r\n    }).then(this._getJson);\r\n  }\r\n  editProfileAvatar(data) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.avatar,\r\n      }),\r\n    }).then(this._getJson);\r\n  }\r\n\r\n  editUserAvatar(data) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.avatar,\r\n      }),\r\n    }).then(this._getJson);\r\n  }\r\n\r\n  addCard(data) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.place,\r\n        link: data.link,\r\n      }),\r\n    }).then(this._getJson);\r\n  }\r\n  deleteCard(id) {\r\n    return fetch(`${this._url}/cards/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then(this._getJson);\r\n  }\r\n  addLike(id) {\r\n    return fetch(`${this._url}/cards/${id}/likes`, {\r\n      method: \"PUT\",\r\n      headers: this._headers,\r\n    }).then(this._getJson);\r\n  }\r\n  deleteLike(id) {\r\n    return fetch(`${this._url}/cards/${id}/likes`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then(this._getJson);\r\n  }\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n    if (isLiked) {\r\n      return this.addLike(cardId);\r\n    } else {\r\n      return this.deleteLike(cardId);\r\n    }\r\n  }\r\n}\r\n\r\nexport const api = new Api({\r\n  url: \"https://mesto.nomoreparties.co/v1/cohort-65\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    authorization: \"561c351e-1fa6-44a4-8675-268f6f753b23\",\r\n  },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}